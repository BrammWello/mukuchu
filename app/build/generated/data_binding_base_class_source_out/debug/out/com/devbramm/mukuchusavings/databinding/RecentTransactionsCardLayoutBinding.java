// Generated by view binder compiler. Do not edit!
package com.devbramm.mukuchusavings.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devbramm.mukuchusavings.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecentTransactionsCardLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final TextView tvItemAmount;

  @NonNull
  public final TextView tvItemDate;

  @NonNull
  public final TextView tvItemTransType;

  private RecentTransactionsCardLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageView5, @NonNull TextView tvItemAmount, @NonNull TextView tvItemDate,
      @NonNull TextView tvItemTransType) {
    this.rootView = rootView;
    this.imageView5 = imageView5;
    this.tvItemAmount = tvItemAmount;
    this.tvItemDate = tvItemDate;
    this.tvItemTransType = tvItemTransType;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecentTransactionsCardLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecentTransactionsCardLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recent_transactions_card_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecentTransactionsCardLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView5;
      ImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.tv_item_amount;
      TextView tvItemAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvItemAmount == null) {
        break missingId;
      }

      id = R.id.tv_item_date;
      TextView tvItemDate = ViewBindings.findChildViewById(rootView, id);
      if (tvItemDate == null) {
        break missingId;
      }

      id = R.id.tv_item_trans_type;
      TextView tvItemTransType = ViewBindings.findChildViewById(rootView, id);
      if (tvItemTransType == null) {
        break missingId;
      }

      return new RecentTransactionsCardLayoutBinding((ConstraintLayout) rootView, imageView5,
          tvItemAmount, tvItemDate, tvItemTransType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
